{"ast":null,"code":"var _jsxFileName = \"/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../redux/actions';\nvar Index = memo(function (props) {\n  console.log('-----props------', props);\n  useEffect(function () {\n    props.getPosts();\n  }, []);\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.isFetching ? '...Loading' : props.data && props.data.size);\n}); // Index.getInitialProps = function(ctx) {\n//   ctx.store.dispatch(getPosts());\n// };\n// const mapStateToProps = (state) =>({\n//   post:state.post\n// })\n\nexport default connect(function (state) {\n  return state.posts;\n}, {\n  getPosts: getPosts\n})(Index);","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/index.js"],"names":["memo","useEffect","useState","connect","getPosts","Index","props","console","log","isFetching","data","size","state","posts"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,IAAMC,KAAK,GAAGL,IAAI,CAAC,UAACM,KAAD,EAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,KAA/B;AACAL,EAAAA,SAAS,CAAC,YAAI;AACZK,IAAAA,KAAK,CAACF,QAAN;AACD,GAFQ,EAEP,EAFO,CAAT;AAGA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,KAAK,CAACG,UAAN,GAAiB,YAAjB,GAA8BH,KAAK,CAACI,IAAN,IAAaJ,KAAK,CAACI,IAAN,CAAWC,IAA3D,CAAP;AACD,CANiB,CAAlB,C,CAQA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAeR,OAAO,CAAC,UAAAS,KAAK;AAAA,SAAEA,KAAK,CAACC,KAAR;AAAA,CAAN,EAAoB;AAACT,EAAAA,QAAQ,EAARA;AAAD,CAApB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import {memo, useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport {getPosts} from '../redux/actions';\n\nconst Index = memo((props) => {\n  console.log('-----props------',props);\n  useEffect(()=>{\n    props.getPosts();\n  },[])\n  return(<h1>{props.isFetching?'...Loading':props.data&& props.data.size}</h1>);\n});\n\n// Index.getInitialProps = function(ctx) {\n//   ctx.store.dispatch(getPosts());\n// };\n\n// const mapStateToProps = (state) =>({\n//   post:state.post\n// })\n\nexport default connect(state=>state.posts,{getPosts})(Index);\n"]},"metadata":{},"sourceType":"module"}