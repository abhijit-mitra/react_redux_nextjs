{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_POSTS, GET_COMMENTS } from '../types';\nimport { createReducer, baseReducer } from '../index';\nconst initialState = {\n  posts: _objectSpread({}, baseReducer),\n  comments: _objectSpread({}, baseReducer)\n};\nconst getPosts = createReducer(GET_POSTS);\nconst getComments = createReducer(GET_COMMENTS);\nconst auth = handleActions(_objectSpread({}, getPosts, {}, getComments), initialState);\nexport default inspectionForm;","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/redux/reducers/auth/index.js"],"names":["GET_POSTS","GET_COMMENTS","createReducer","baseReducer","initialState","posts","comments","getPosts","getComments","auth","handleActions","inspectionForm"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,UAAzC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,oBAAKF,WAAL,CADc;AAEnBG,EAAAA,QAAQ,oBAAKH,WAAL;AAFW,CAArB;AAKA,MAAMI,QAAQ,GAAGL,aAAa,CAACF,SAAD,CAA9B;AACA,MAAMQ,WAAW,GAAGN,aAAa,CAACD,YAAD,CAAjC;AAEA,MAAMQ,IAAI,GAAGC,aAAa,mBAEnBH,QAFmB,MAGnBC,WAHmB,GAKxBJ,YALwB,CAA1B;AAQA,eAAeO,cAAf","sourcesContent":["import { GET_POSTS, GET_COMMENTS } from '../types';\nimport {createReducer, baseReducer} from '../index';\n\nconst initialState = {\n  posts:{...baseReducer},\n  comments:{...baseReducer}\n};\n\nconst getPosts = createReducer(GET_POSTS);\nconst getComments = createReducer(GET_COMMENTS);\n\nconst auth = handleActions(\n  {\n    ...getPosts,\n    ...getComments\n  },\n  initialState,\n);\n\nexport default inspectionForm;\n"]},"metadata":{},"sourceType":"module"}