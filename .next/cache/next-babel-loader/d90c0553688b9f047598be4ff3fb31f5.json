{"ast":null,"code":"var _jsxFileName = \"/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/posts/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Link from 'next/link';\n//\n// const Posts = (props)=>(\n//   <h1>\n//     All Posts\n//     <Link href=\"/posts/[postId]\" as=\"/posts/1\">\n//       <a>Get Post Details</a>\n//     </Link>\n//   </h1>\n// )\n//\n// export default Posts;\nimport { memo, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getComments } from '../redux/actions';\nconst Posts = memo(props => {\n  useEffect(() => {\n    props.getComments();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Posts\"), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.isFetching ? '...Loading' : props.data && props.data.size));\n});\n\nPosts.getInitialProps = async function (ctx) {\n  if (ctx.isServer) {\n    await ctx.store.dispatch(getComments());\n  }\n};\n\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nexport default connect(state => state.posts, {\n  getComments\n})(Index);","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/posts/index.js"],"names":["memo","useEffect","useState","connect","getComments","Posts","props","isFetching","data","size","getInitialProps","ctx","isServer","store","dispatch","mapStateToProps","state","comments","posts","Index"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAQA,IAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,KAAK,GAAGL,IAAI,CAAEM,KAAD,IAAW;AAC5BL,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,KAAK,CAACF,WAAN;AACD,GAFQ,EAEP,EAFO,CAAT;AAGA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,KAAK,CAACC,UAAN,GAAiB,YAAjB,GAA8BD,KAAK,CAACE,IAAN,IAAaF,KAAK,CAACE,IAAN,CAAWC,IAA3D,CAFF,CADF;AAOD,CAXiB,CAAlB;;AAaAJ,KAAK,CAACK,eAAN,GAAwB,gBAAeC,GAAf,EAAoB;AAC1C,MAAGA,GAAG,CAACC,QAAP,EAAgB;AACZ,UAAMD,GAAG,CAACE,KAAJ,CAAUC,QAAV,CAAmBV,WAAW,EAA9B,CAAN;AACH;AACF,CAJD;;AAMA,MAAMW,eAAe,GAAIC,KAAD,KAAW;AACjCC,EAAAA,QAAQ,EAACD,KAAK,CAACC;AADkB,CAAX,CAAxB;;AAIA,eAAed,OAAO,CAACa,KAAK,IAAEA,KAAK,CAACE,KAAd,EAAoB;AAACd,EAAAA;AAAD,CAApB,CAAP,CAA0Ce,KAA1C,CAAf","sourcesContent":["// import Link from 'next/link';\n//\n// const Posts = (props)=>(\n//   <h1>\n//     All Posts\n//     <Link href=\"/posts/[postId]\" as=\"/posts/1\">\n//       <a>Get Post Details</a>\n//     </Link>\n//   </h1>\n// )\n//\n// export default Posts;\n\n\nimport {memo, useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\n\nimport {getComments} from '../redux/actions';\n\nconst Posts = memo((props) => {\n  useEffect(()=>{\n    props.getComments();\n  },[])\n  return(\n    <>\n      <h1>Posts</h1>\n      <h1>{props.isFetching?'...Loading':props.data&& props.data.size}</h1>\n\n    </>\n  );\n});\n\nPosts.getInitialProps = async function(ctx) {\n  if(ctx.isServer){\n      await ctx.store.dispatch(getComments());\n  }\n};\n\nconst mapStateToProps = (state) =>({\n  comments:state.comments\n})\n\nexport default connect(state=>state.posts,{getComments})(Index);\n"]},"metadata":{},"sourceType":"module"}