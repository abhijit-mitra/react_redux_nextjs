{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { combineReducers } from 'redux';\nimport posts from './posts';\nexport var baseReducer = {\n  isFetching: false,\n  data: null,\n  error: null\n};\nexport var createReducer = function createReducer(type) {\n  var _ref4;\n\n  return _ref4 = {}, _defineProperty(_ref4, \"\".concat(type, \"_started\"), function _started() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n    var _ref = arguments.length > 1 ? arguments[1] : undefined,\n        payload = _ref.payload;\n\n    return _objectSpread({}, state, {\n      isFetching: true\n    });\n  }), _defineProperty(_ref4, \"\".concat(type, \"_failed\"), function _failed() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n    var _ref2 = arguments.length > 1 ? arguments[1] : undefined,\n        payload = _ref2.payload;\n\n    return _objectSpread({}, state, {\n      isFetching: false,\n      error: payload\n    });\n  }), _defineProperty(_ref4, \"\".concat(type, \"_success\"), function _success() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n    var _ref3 = arguments.length > 1 ? arguments[1] : undefined,\n        payload = _ref3.payload;\n\n    return _objectSpread({}, state, {\n      isFetching: false,\n      data: payload\n    });\n  }), _ref4;\n};\nvar rootReducer = combineReducers({\n  posts: posts\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/redux/reducers/index.js"],"names":["combineReducers","posts","baseReducer","isFetching","data","error","createReducer","type","state","initialState","payload","rootReducer"],"mappings":";;;;;;;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,UAAU,EAAC,KADc;AAEzBC,EAAAA,IAAI,EAAC,IAFoB;AAGzBC,EAAAA,KAAK,EAAC;AAHmB,CAApB;AAMP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD;AAAA;;AAAA,sDAErBA,IAFqB,eAEJ;AAAA,QAACC,KAAD,uEAASC,YAAT;;AAAA;AAAA,QAAwBC,OAAxB,QAAwBA,OAAxB;;AAAA,6BAEdF,KAFc;AAGjBL,MAAAA,UAAU,EAAC;AAHM;AAAA,GAFI,oCAOrBI,IAPqB,cAOL;AAAA,QAACC,KAAD,uEAASC,YAAT;;AAAA;AAAA,QAAwBC,OAAxB,SAAwBA,OAAxB;;AAAA,6BAEXF,KAFW;AAGdL,MAAAA,UAAU,EAAC,KAHG;AAIdE,MAAAA,KAAK,EAACK;AAJQ;AAAA,GAPK,oCAarBH,IAbqB,eAaJ;AAAA,QAACC,KAAD,uEAASC,YAAT;;AAAA;AAAA,QAAwBC,OAAxB,SAAwBA,OAAxB;;AAAA,6BAEZF,KAFY;AAGfL,MAAAA,UAAU,EAAC,KAHI;AAIfC,MAAAA,IAAI,EAACM;AAJU;AAAA,GAbI;AAAA,CAAtB;AAsBP,IAAMC,WAAW,GAAGX,eAAe,CAAC;AAClCC,EAAAA,KAAK,EAALA;AADkC,CAAD,CAAnC;AAKA,eAAeU,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport posts from './posts';\n\nexport const baseReducer = {\n  isFetching:false,\n  data:null,\n  error:null,\n}\n\nexport const createReducer = (type) =>(\n  {\n    [`${type}_started`]: (state = initialState, {payload}) =>\n      ({\n        ...state,\n        isFetching:true\n      }),\n    [`${type}_failed`]: (state = initialState, {payload}) =>\n        ({\n          ...state,\n          isFetching:false,\n          error:payload\n        }),\n    [`${type}_success`]: (state = initialState, {payload}) =>\n        ({\n          ...state,\n          isFetching:false,\n          data:payload\n        }),\n\n  });\n\nconst rootReducer = combineReducers({\n  posts,\n});\n\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}