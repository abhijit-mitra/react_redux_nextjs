{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/posts/[postId]/comments/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Router, { useRouter } from 'next/router';\nexport var Comments = function Comments(_ref) {\n  var comments = _ref.comments;\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, comments.map(function (data, i) {\n    return __jsx(\"h2\", {\n      key: i,\n      onClick: function onClick() {\n        return Router.push('/posts/[postId]/comments/[commentId]', \"/posts/\".concat(query.postId, \"/comments/\").concat(i + 1));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, data);\n  }));\n};\n\nvar getData = function getData() {\n  return new _Promise(function (resolve, reject) {\n    var data = {\n      comments: ['Hi', 'Hello', 'How r you?']\n    };\n    setTimeout(function () {\n      resolve(data);\n    }, 1000);\n  });\n};\n\nComments.getInitialProps = function _callee(_ref2) {\n  var req, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('https://api.github.com/repos/zeit/next.js'));\n\n        case 3:\n          res = _context.sent;\n          return _context.abrupt(\"return\", {\n            comments: ['Hi', 'Hello', 'How r you?']\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Comments;","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/posts/[postId]/comments/index.js"],"names":["Router","useRouter","Comments","comments","query","map","data","i","push","postId","getData","resolve","reject","setTimeout","getInitialProps","req","fetch","res"],"mappings":";;;;;AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAmC,aAAnC;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAe;AAAA,MAAbC,QAAa,QAAbA,QAAa;;AAAA,mBACrBF,SAAS,EADY;AAAA,MAC9BG,KAD8B,cAC9BA,KAD8B;;AAErC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP;AAAA,WACZ;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,MAAA,OAAO,EAAE;AAAA,eAAIP,MAAM,CAACQ,IAAP,CAAY,sCAAZ,mBACfJ,KAAK,CAACK,MADS,uBACUF,CAAC,GAAC,CADZ,EAAJ;AAAA,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGD,IAFH,CADY;AAAA,GAAb,CADH,CADF;AASD,CAXM;;AAaP,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAM,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AACnD,QAAMN,IAAI,GAAG;AAACH,MAAAA,QAAQ,EAAC,CAAC,IAAD,EAAM,OAAN,EAAc,YAAd;AAAV,KAAb;AACAU,IAAAA,UAAU,CAAC,YAAI;AACbF,MAAAA,OAAO,CAACL,IAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GALqB,CAAN;AAAA,CAAhB;;AAOAJ,QAAQ,CAACY,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQC,UAAAA,GAAR,SAAQA,GAAR;AAAA;AAAA,2CACPC,KAAK,CAAC,2CAAD,CADE;;AAAA;AACnBC,UAAAA,GADmB;AAAA,2CAGlB;AAACd,YAAAA,QAAQ,EAAC,CAAC,IAAD,EAAM,OAAN,EAAc,YAAd;AAAV,WAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAMA,eAAeD,QAAf","sourcesContent":["import Router, { useRouter }  from 'next/router';\n\nexport const Comments = ({comments}) =>{\n  const {query} = useRouter();\n  return(\n    <div>\n      {comments.map((data, i)=>(\n        <h2 key={i} onClick={()=>Router.push('/posts/[postId]/comments/[commentId]',\n        `/posts/${query.postId}/comments/${i+1}`)}>\n          {data}\n        </h2>))}\n    </div>\n  )\n}\n\nconst getData = () => new Promise((resolve, reject)=>{\n  const data = {comments:['Hi','Hello','How r you?']};\n  setTimeout(()=>{\n    resolve(data);\n  }, 1000);\n});\n\nComments.getInitialProps = async({ req }) =>{\n  const res = await fetch('https://api.github.com/repos/zeit/next.js')\n  // const res = await getData();\n  return {comments:['Hi','Hello','How r you?']};;\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}