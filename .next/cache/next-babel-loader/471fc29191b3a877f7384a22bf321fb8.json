{"ast":null,"code":"var _jsxFileName = \"/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../redux/actions';\nconst Index = memo(props => {\n  console.log('-----props------', props); // useEffect(()=>{\n  //   props.getPosts();\n  // },[])\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.isFetching ? '...Loading' : props.data && props.data.size);\n});\n\nIndex.getInitialProps = function ({\n  store\n}) {\n  ctx.store.dispatch(getPosts());\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(state => state.posts, {\n  getPosts\n})(Index);","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/index.js"],"names":["memo","useEffect","useState","connect","getPosts","Index","props","console","log","isFetching","data","size","getInitialProps","store","ctx","dispatch","mapStateToProps","state","post","posts"],"mappings":";;;AAAA,SAAQA,IAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,MAAMC,KAAK,GAAGL,IAAI,CAAEM,KAAD,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,KAA/B,EAD4B,CAE5B;AACA;AACA;;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACG,UAAN,GAAiB,YAAjB,GAA8BH,KAAK,CAACI,IAAN,IAAaJ,KAAK,CAACI,IAAN,CAAWC,IAA3D,CAAP;AACD,CANiB,CAAlB;;AAQAN,KAAK,CAACO,eAAN,GAAwB,UAAS;AAACC,EAAAA;AAAD,CAAT,EAAkB;AACxCC,EAAAA,GAAG,CAACD,KAAJ,CAAUE,QAAV,CAAmBX,QAAQ,EAA3B;AACD,CAFD;;AAIA,MAAMY,eAAe,GAAIC,KAAD,KAAW;AACjCC,EAAAA,IAAI,EAACD,KAAK,CAACC;AADsB,CAAX,CAAxB;;AAIA,eAAef,OAAO,CAACc,KAAK,IAAEA,KAAK,CAACE,KAAd,EAAoB;AAACf,EAAAA;AAAD,CAApB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import {memo, useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport {getPosts} from '../redux/actions';\n\nconst Index = memo((props) => {\n  console.log('-----props------',props);\n  // useEffect(()=>{\n  //   props.getPosts();\n  // },[])\n  return(<h1>{props.isFetching?'...Loading':props.data&& props.data.size}</h1>);\n});\n\nIndex.getInitialProps = function({store}) {\n  ctx.store.dispatch(getPosts());\n};\n\nconst mapStateToProps = (state) =>({\n  post:state.post\n})\n\nexport default connect(state=>state.posts,{getPosts})(Index);\n"]},"metadata":{},"sourceType":"module"}