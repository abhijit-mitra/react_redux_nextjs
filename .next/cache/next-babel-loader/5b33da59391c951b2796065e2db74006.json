{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport const baseReducer = {\n  isFetching: false,\n  data: null,\n  error: null\n};\nexport const createReducer = type => ({\n  // [`${type}_started`]: (state = initialState, {payload}) =>\n  //   ({\n  //     ...state,\n  //     isFetching:true\n  //   }),\n  // [`${type}_failed`]: (state = initialState, {payload}) =>\n  //     ({\n  //       ...state,\n  //       isFetching:false,\n  //       error:payload\n  //     }),\n  [`${type}_success`]: (state = initialState, {\n    payload\n  }) => _objectSpread({}, state, {\n    isFetching: false,\n    data: payload\n  })\n});","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/redux/reducers/utils.js"],"names":["baseReducer","isFetching","data","error","createReducer","type","state","initialState","payload"],"mappings":";;;;;;AAAA,OAAO,MAAMA,WAAW,GAAG;AACzBC,EAAAA,UAAU,EAAC,KADc;AAEzBC,EAAAA,IAAI,EAAC,IAFoB;AAGzBC,EAAAA,KAAK,EAAC;AAHmB,CAApB;AAMP,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAC3B;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE,GAAEA,IAAK,UAAT,GAAqB,CAACC,KAAK,GAAGC,YAAT,EAAuB;AAACC,IAAAA;AAAD,GAAvB,uBAEZF,KAFY;AAGfL,IAAAA,UAAU,EAAC,KAHI;AAIfC,IAAAA,IAAI,EAACM;AAJU;AAZvB,CAD2B,CAAtB","sourcesContent":["export const baseReducer = {\n  isFetching:false,\n  data:null,\n  error:null,\n}\n\nexport const createReducer = (type) =>(\n  {\n    // [`${type}_started`]: (state = initialState, {payload}) =>\n    //   ({\n    //     ...state,\n    //     isFetching:true\n    //   }),\n    // [`${type}_failed`]: (state = initialState, {payload}) =>\n    //     ({\n    //       ...state,\n    //       isFetching:false,\n    //       error:payload\n    //     }),\n    [`${type}_success`]: (state = initialState, {payload}) =>\n        ({\n          ...state,\n          isFetching:false,\n          data:payload\n        }),\n\n  });\n"]},"metadata":{},"sourceType":"module"}