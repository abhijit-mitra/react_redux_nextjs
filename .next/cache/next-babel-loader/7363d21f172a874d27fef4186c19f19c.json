{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { handleActions } from 'redux-actions';\nimport { GET_COMMENTS } from '../../types';\nimport { createReducer, baseReducer } from '../utils';\n\nconst initialState = _objectSpread({}, baseReducer);\n\nconst getComments = createReducer(GET_COMMENTS);\nconst comments = handleActions(_objectSpread({}, getComments), initialState);\nexport default comments;","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/redux/reducers/comments/index.js"],"names":["handleActions","GET_COMMENTS","createReducer","baseReducer","initialState","getComments","comments"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,UAAzC;;AAEA,MAAMC,YAAY,qBACbD,WADa,CAAlB;;AAIA,MAAME,WAAW,GAAGH,aAAa,CAACD,YAAD,CAAjC;AAEA,MAAMK,QAAQ,GAAGN,aAAa,mBAEvBK,WAFuB,GAI5BD,YAJ4B,CAA9B;AAOA,eAAeE,QAAf","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport { GET_COMMENTS } from '../../types';\nimport {createReducer, baseReducer} from '../utils';\n\nconst initialState = {\n  ...baseReducer\n};\n\nconst getComments = createReducer(GET_COMMENTS);\n\nconst comments = handleActions(\n  {\n    ...getComments\n  },\n  initialState,\n);\n\nexport default comments;\n"]},"metadata":{},"sourceType":"module"}