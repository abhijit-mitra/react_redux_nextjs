{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducers from './reducers';\nexport const initStore = (initialState = {}) => {\n  return createStore(reducers, initialState, applyMiddleware(thunk));\n};\nconst isDev = true;\nconst {\n  composeWithDevTools\n} = isDev ? require('redux-devtools-extension') : require('redux-devtools-extension/logOnlyInProduction');\nexport default ((initialState = {}) => {\n  const middlewares = isDev ? [thunk, createLogger()] : [thunk];\n  return createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n});","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/redux/index.js"],"names":["createStore","applyMiddleware","compose","thunk","createLogger","reducers","initStore","initialState","isDev","composeWithDevTools","require","middlewares","composeEnhancers"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,OAAO,MAAMC,SAAS,GAAG,CAACC,YAAY,GAAG,EAAhB,KAAuB;AAC9C,SAAOP,WAAW,CAACK,QAAD,EAAWE,YAAX,EAAyBN,eAAe,CAACE,KAAD,CAAxC,CAAlB;AACD,CAFM;AAIP,MAAMK,KAAK,OAAX;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BD,KAAK,GAAGE,OAAO,CAAC,0BAAD,CAAV,GAAyCA,OAAO,CAAC,8CAAD,CAArF;AAEA,gBAAe,CAACH,YAAY,GAAC,EAAd,KAAqB;AAClC,QAAMI,WAAW,GAAGH,KAAK,GAAG,CAACL,KAAD,EAAQC,YAAY,EAApB,CAAH,GAA6B,CAACD,KAAD,CAAtD;AACA,SAAOH,WAAW,CAACK,QAAD,EAAWE,YAAX,EAAyBK,gBAAgB,CAACX,eAAe,CAAC,GAAGU,WAAJ,CAAhB,CAAzC,CAAlB;AACD,CAHD","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducers from './reducers';\n\n\nexport const initStore = (initialState = {}) => {\n  return createStore(reducers, initialState, applyMiddleware(thunk));\n};\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nconst { composeWithDevTools } = isDev ? require('redux-devtools-extension') : require('redux-devtools-extension/logOnlyInProduction');\n\nexport default (initialState={}) => {\n  const middlewares = isDev ? [thunk, createLogger()] : [thunk];\n  return createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n};\n"]},"metadata":{},"sourceType":"module"}