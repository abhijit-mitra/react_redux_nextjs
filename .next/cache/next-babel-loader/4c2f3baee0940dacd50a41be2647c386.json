{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nimport { GET_POSTS } from '../../types';\nexport const getPosts = () => (dispatch, getState) => {\n  const state = getState();\n\n  if (state.posts.data) {\n    return;\n  }\n\n  const callApi = async () => {\n    try {\n      let res = await fetch('https://api.github.com/repos/zeit/next.js');\n      res = await res.json();\n      dispatch({\n        type: `${GET_POSTS}_success`,\n        payload: res\n      });\n    } catch (err) {\n      dispatch({\n        type: `${GET_POSTS}_failed`,\n        payload: err\n      });\n    }\n  };\n\n  dispatch({\n    type: `${GET_POSTS}_started`\n  });\n  return Promise.resolve(callApi());\n};","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/redux/actions/posts/index.js"],"names":["fetch","GET_POSTS","getPosts","dispatch","getState","state","posts","data","callApi","res","json","type","payload","err","Promise","resolve"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAGA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAsB;AAClD,QAAMC,KAAK,GAAGD,QAAQ,EAAtB;;AACA,MAAGC,KAAK,CAACC,KAAN,CAAYC,IAAf,EAAoB;AAClB;AACD;;AACD,QAAMC,OAAO,GAAG,YAAW;AACzB,QAAG;AACD,UAAIC,GAAG,GAAG,MAAMT,KAAK,CAAC,2CAAD,CAArB;AACAS,MAAAA,GAAG,GAAG,MAAMA,GAAG,CAACC,IAAJ,EAAZ;AACAP,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,GAAEV,SAAU,UAAnB;AAA8BW,QAAAA,OAAO,EAAEH;AAAvC,OAAD,CAAR;AACD,KAJD,CAIC,OAAMI,GAAN,EAAU;AACTV,MAAAA,QAAQ,CAAC;AAACQ,QAAAA,IAAI,EAAE,GAAEV,SAAU,SAAnB;AAA6BW,QAAAA,OAAO,EAAEC;AAAtC,OAAD,CAAR;AACD;AACF,GARD;;AAUAV,EAAAA,QAAQ,CAAC;AAACQ,IAAAA,IAAI,EAAE,GAAEV,SAAU;AAAnB,GAAD,CAAR;AACA,SAAOa,OAAO,CAACC,OAAR,CAAgBP,OAAO,EAAvB,CAAP;AAED,CAlBM","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nimport { GET_POSTS } from '../../types';\n\n\nexport const getPosts = () => (dispatch, getState)=>{\n  const state = getState();\n  if(state.posts.data){\n    return;\n  }\n  const callApi = async () =>{\n    try{\n      let res = await fetch('https://api.github.com/repos/zeit/next.js');\n      res = await res.json();\n      dispatch({type:`${GET_POSTS}_success`, payload: res});\n    }catch(err){\n      dispatch({type:`${GET_POSTS}_failed`, payload: err});\n    }\n  }\n\n  dispatch({type:`${GET_POSTS}_started`});\n  return Promise.resolve(callApi());\n\n}\n"]},"metadata":{},"sourceType":"module"}