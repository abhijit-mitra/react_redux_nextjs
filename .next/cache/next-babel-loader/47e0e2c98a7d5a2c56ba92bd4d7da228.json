{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../redux/actions';\nvar Index = memo(function (props) {\n  console.log('-----props------', props); // useEffect(()=>{\n  //   props.getPosts();\n  // },[])\n\n  return __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.isFetching ? '...Loading' : props.data && props.data.size);\n});\n\nIndex.getInitialProps = function _callee(_ref) {\n  var store;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          store = _ref.store;\n          store.dispatch(getPosts());\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    post: state.post\n  };\n};\n\nexport default connect(function (state) {\n  return state.posts;\n}, {\n  getPosts: getPosts\n})(Index);","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/index.js"],"names":["memo","useEffect","useState","connect","getPosts","Index","props","console","log","isFetching","data","size","getInitialProps","store","dispatch","mapStateToProps","state","post","posts"],"mappings":";;;;AAAA,SAAQA,IAAR,EAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,IAAMC,KAAK,GAAGL,IAAI,CAAC,UAACM,KAAD,EAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,KAA/B,EAD4B,CAE5B;AACA;AACA;;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACG,UAAN,GAAiB,YAAjB,GAA8BH,KAAK,CAACI,IAAN,IAAaJ,KAAK,CAACI,IAAN,CAAWC,IAA3D,CAAP;AACD,CANiB,CAAlB;;AAQAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBC,UAAAA,KAAhB,QAAgBA,KAAhB;AACtBA,UAAAA,KAAK,CAACC,QAAN,CAAeV,QAAQ,EAAvB;;AADsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAIA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAW;AACjCC,IAAAA,IAAI,EAACD,KAAK,CAACC;AADsB,GAAX;AAAA,CAAxB;;AAIA,eAAed,OAAO,CAAC,UAAAa,KAAK;AAAA,SAAEA,KAAK,CAACE,KAAR;AAAA,CAAN,EAAoB;AAACd,EAAAA,QAAQ,EAARA;AAAD,CAApB,CAAP,CAAuCC,KAAvC,CAAf","sourcesContent":["import {memo, useEffect, useState} from 'react';\nimport { connect } from 'react-redux';\nimport {getPosts} from '../redux/actions';\n\nconst Index = memo((props) => {\n  console.log('-----props------',props);\n  // useEffect(()=>{\n  //   props.getPosts();\n  // },[])\n  return(<h1>{props.isFetching?'...Loading':props.data&& props.data.size}</h1>);\n});\n\nIndex.getInitialProps = async function({store}) {\n  store.dispatch(getPosts());\n};\n\nconst mapStateToProps = (state) =>({\n  post:state.post\n})\n\nexport default connect(state=>state.posts,{getPosts})(Index);\n"]},"metadata":{},"sourceType":"module"}