{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { handleActions } from 'redux-actions';\nimport { GET_COMMENTS } from '../../types';\nimport { createReducer, baseReducer } from '../utils';\n\nvar initialState = _objectSpread({}, baseReducer);\n\nvar getComments = createReducer(GET_COMMENTS, initialState);\nvar comments = handleActions(_objectSpread({}, getComments), initialState);\nexport default comments;","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/redux/reducers/comments/index.js"],"names":["handleActions","GET_COMMENTS","createReducer","baseReducer","initialState","getComments","comments"],"mappings":";;;;;;;;;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,UAAzC;;AAEA,IAAMC,YAAY,qBACbD,WADa,CAAlB;;AAIA,IAAME,WAAW,GAAGH,aAAa,CAACD,YAAD,EAAeG,YAAf,CAAjC;AAEA,IAAME,QAAQ,GAAGN,aAAa,mBAEvBK,WAFuB,GAI5BD,YAJ4B,CAA9B;AAOA,eAAeE,QAAf","sourcesContent":["import { handleActions } from 'redux-actions';\n\nimport { GET_COMMENTS } from '../../types';\nimport {createReducer, baseReducer} from '../utils';\n\nconst initialState = {\n  ...baseReducer\n};\n\nconst getComments = createReducer(GET_COMMENTS, initialState);\n\nconst comments = handleActions(\n  {\n    ...getComments\n  },\n  initialState,\n);\n\nexport default comments;\n"]},"metadata":{},"sourceType":"module"}