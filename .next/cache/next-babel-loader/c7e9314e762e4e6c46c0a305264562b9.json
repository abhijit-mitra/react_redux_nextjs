{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { memo, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getComments } from '../../redux/actions';\nvar Posts = memo(function (props) {\n  useEffect(function () {\n    props.getComments();\n    console.log('useEffect executed');\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(\"h1\", null, \"Posts\"), __jsx(\"h1\", null, props.isFetching ? '...Loading' : props.data && props.data.size));\n});\n\nPosts.getInitialProps = function _callee(ctx) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!ctx.isServer) {\n            _context.next = 3;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ctx.store.dispatch(getComments()));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default connect(function (state) {\n  return state.comments;\n}, {\n  getComments: getComments\n})(Posts);","map":null,"metadata":{},"sourceType":"module"}