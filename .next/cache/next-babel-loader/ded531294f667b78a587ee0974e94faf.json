{"ast":null,"code":"var _jsxFileName = \"/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/posts/[postId]/comments/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Router, { useRouter } from 'next/router';\nimport { useState, useEffect } from 'react';\nconst initialState = {\n  data: [],\n  error: null,\n  isFetching: false\n};\nexport const Comments = () => {\n  const {\n    query\n  } = useRouter();\n  const {\n    0: state,\n    1: setState\n  } = useState(initialState);\n  useEffect(async () => {\n    setState(_objectSpread({}, state, {\n      isFetching: true\n    }));\n    const data = await getData();\n    setState(_objectSpread({}, state, {\n      isFetching: false,\n      data\n    }));\n  }, []);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, state.isFetching ? __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Loading...\") : (state.data && state.data.comments).map((data, i) => __jsx(\"h2\", {\n    key: i,\n    onClick: () => Router.push('/posts/[postId]/comments/[commentId]', `/posts/${query.postId}/comments/${i + 1}`),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, data)));\n};\n\nconst getData = () => new Promise((resolve, reject) => {\n  const data = {\n    comments: ['Hi', 'Hello', 'How r you?']\n  };\n  setTimeout(() => {\n    resolve(data);\n  }, 5000);\n});\n\nexport default Comments;","map":{"version":3,"sources":["/Users/abhijit/Documents/Projects/React/ssr_next_js/pages/posts/[postId]/comments/index.js"],"names":["Router","useRouter","useState","useEffect","initialState","data","error","isFetching","Comments","query","state","setState","getData","comments","map","i","push","postId","Promise","resolve","reject","setTimeout"],"mappings":";;;;;;;;;;AAAA,OAAOA,MAAP,IAAiBC,SAAjB,QAAmC,aAAnC;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AAEA,MAAMC,YAAY,GAAC;AACjBC,EAAAA,IAAI,EAAC,EADY;AAEjBC,EAAAA,KAAK,EAAC,IAFW;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAAnB;AAMA,OAAO,MAAMC,QAAQ,GAAG,MAAK;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAUR,SAAS,EAAzB;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAACE,YAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAE,YAAS;AAChBQ,IAAAA,QAAQ,mBACHD,KADG;AAENH,MAAAA,UAAU,EAAC;AAFL,OAAR;AAIA,UAAMF,IAAI,GAAG,MAAMO,OAAO,EAA1B;AACAD,IAAAA,QAAQ,mBACHD,KADG;AAENH,MAAAA,UAAU,EAAE,KAFN;AAGNF,MAAAA;AAHM,OAAR;AAKH,GAXQ,EAWP,EAXO,CAAT;AAaA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,KAAK,CAACH,UAAN,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAEC,CAACG,KAAK,CAACL,IAAN,IAAcK,KAAK,CAACL,IAAN,CAAWQ,QAA1B,EAAoCC,GAApC,CAAwC,CAACT,IAAD,EAAOU,CAAP,KACtC;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,OAAO,EAAE,MAAIf,MAAM,CAACgB,IAAP,CAAY,sCAAZ,EACxB,UAASP,KAAK,CAACQ,MAAO,aAAYF,CAAC,GAAC,CAAE,EADd,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGV,IAFH,CADF,CAHJ,CADF;AAYD,CA7BM;;AA+BP,MAAMO,OAAO,GAAG,MAAM,IAAIM,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AACnD,QAAMf,IAAI,GAAG;AAACQ,IAAAA,QAAQ,EAAC,CAAC,IAAD,EAAM,OAAN,EAAc,YAAd;AAAV,GAAb;AACAQ,EAAAA,UAAU,CAAC,MAAI;AACbF,IAAAA,OAAO,CAACd,IAAD,CAAP;AACD,GAFS,EAEP,IAFO,CAAV;AAGD,CALqB,CAAtB;;AAOA,eAAeG,QAAf","sourcesContent":["import Router, { useRouter }  from 'next/router';\nimport {useState, useEffect} from 'react';\n\nconst initialState={\n  data:[],\n  error:null,\n  isFetching: false\n}\n\nexport const Comments = () =>{\n  const {query} = useRouter();\n  const [state, setState] = useState(initialState);\n\n  useEffect( async()=>{\n      setState({\n        ...state,\n        isFetching:true\n      })\n      const data = await getData();\n      setState({\n        ...state,\n        isFetching: false,\n        data\n      })\n  },[]);\n\n  return(\n    <div>\n      {state.isFetching?\n        <h1>Loading...</h1>:\n        (state.data && state.data.comments).map((data, i)=>(\n          <h2 key={i} onClick={()=>Router.push('/posts/[postId]/comments/[commentId]',\n          `/posts/${query.postId}/comments/${i+1}`)}>\n            {data}\n          </h2>))\n      }\n    </div>\n  )\n}\n\nconst getData = () => new Promise((resolve, reject)=>{\n  const data = {comments:['Hi','Hello','How r you?']};\n  setTimeout(()=>{\n    resolve(data);\n  }, 5000);\n});\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}